/*
This build the po catalogs
*/
class BuildPoPlugin extends cbScriptPlugin
{
	msgfmt = _T("\"C:\\Archivos de programa\\Poedit\\bin\\msgfmt.exe\"");
	//local msgfmt = _T("/usr/bin/msgfmt");
	constructor ()
	{
		info.name = _T("BuildPo");
		info.title = _T("Build mo catalogs from po catalogs");
		info.version = _T("0.1");
		info.license = _T("GPL");
	}

	function GetMenu()
	{
		local entries = ::wxArrayString();
		entries.Add(_T("Plugins/1:Build messages catalogs"), 1);
		return entries;
	}

	function OnMenuClicked(index)
	{
        if (index == 0)
            Execute();
	}

	function Execute ()
	{
		// first, let's find out if there's even a project open
		local prj = GetProjectManager().GetActiveProject();
        if (IsNull(prj))
        {
        	ShowError(_T("No project is open!"));
        	return -1;
        }
        //list files
        local catalogs = ::wxArrayString();
        local count = prj.GetFilesCount();
        for (local i = 0; i < count; ++i)
        {
        	local prj_file = prj.GetFile(i);
        	if (!IsNull(prj_file))
        	{
        		if (prj_file.relativeFilename.Matches(_T("*.po")))
					catalogs.Add(prj_file.relativeFilename,1);
        	}
        }
        //run
		for (local i = 0; i < catalogs.GetCount(); i++)
		{
			local out = ::wxString();
			out = catalogs.Item(i).BeforeLast('.');
			local cmd = ::wxString();
			cmd = _T("msgfmt -v -o \"") + out + _T(".mo\" \"")+ catalogs.Item(i) + _T("\"");
			print(cmd);
			if (IO.Execute(cmd) != 0)
			{
				print(_T("Failed. Make sure the msgfmt is installed and in the path..."));
				return;
			}
			//system(IO.ExecuteAndGetOutput(cmd));
		}
		print(_T("All done!"));
	}
}

RegisterPlugin(BuildPoPlugin());
